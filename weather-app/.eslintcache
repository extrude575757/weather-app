[{"/var/www/lambda/React/8thReact/buildWk8thReact/weather-app/src/index.js":"1","/var/www/lambda/React/8thReact/buildWk8thReact/weather-app/src/reportWebVitals.js":"2","/var/www/lambda/React/8thReact/buildWk8thReact/weather-app/src/App.js":"3","/var/www/lambda/React/8thReact/buildWk8thReact/weather-app/src/components/Main.jsx":"4","/var/www/lambda/React/8thReact/buildWk8thReact/weather-app/src/components/SevenDayForecast.jsx":"5","/var/www/lambda/React/8thReact/buildWk8thReact/weather-app/src/components/Search/Search.jsx":"6"},{"size":500,"mtime":1608535792648,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1608535792648,"results":"9","hashOfConfig":"8"},{"size":145,"mtime":1608535792648,"results":"10","hashOfConfig":"8"},{"size":182,"mtime":1608535792648,"results":"11","hashOfConfig":"8"},{"size":1490,"mtime":1608535792648,"results":"12","hashOfConfig":"8"},{"size":2375,"mtime":1608535792648,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"19mp7zv",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},"/var/www/lambda/React/8thReact/buildWk8thReact/weather-app/src/index.js",[],["30","31"],"/var/www/lambda/React/8thReact/buildWk8thReact/weather-app/src/reportWebVitals.js",[],"/var/www/lambda/React/8thReact/buildWk8thReact/weather-app/src/App.js",[],"/var/www/lambda/React/8thReact/buildWk8thReact/weather-app/src/components/Main.jsx",["32"],"import React from \"react\";\nimport App from \"../App\";\nimport SevenDayForecast from \"./SevenDayForecast\";\n\nconst Main = () => {\n  return <SevenDayForecast />;\n};\n\nexport default Main;\n","/var/www/lambda/React/8thReact/buildWk8thReact/weather-app/src/components/SevenDayForecast.jsx",["33"],"import React, { useState } from \"react\";\nimport Main from \"./Main\";\nimport Search from \"./Search/Search\";\nvar zipcodes = require(\"zipcodes\");\n\n// display seven day forecast using the Search components\n// render searchByCity and searchByZip on a submit handler\n\nconst SevenDayForecast = (props) => {\n  const [userLocation, setUserLocation] = useState(\"\");\n  const [submitted, setSubmitted] = useState(false);\n  const [returnedData, setReturnedData] = useState({\n    lat: \"\",\n    lon: \"\",\n  });\n\n  const locationChangeHandler = (event) => {\n    console.log(event.target.value);\n    setUserLocation(event.target.value);\n  };\n\n  // MAKE SUBMIT HANLDER WITH LONGITUDE AND LATITUDE CONVERTER USING API/NPM PACKAGE\n  const submitHandler = (event) => {\n    event.preventDefault();\n    setSubmitted(!submitted);\n    let zipCodeData = zipcodes.lookup(userLocation);\n    console.log(zipCodeData);\n    setReturnedData({\n      lat: zipCodeData.latitude,\n      lon: zipCodeData.longitude,\n    });\n  };\n\n  return (\n    <div>\n      <h1> Your Seven Day Forecast </h1>\n      <form onSubmit={submitHandler}>\n        <label>Search Zip Code</label>\n        <input\n          type=\"text\"\n          id=\"zipCode\"\n          placeholder=\"Enter Zip Code\"\n          value={userLocation.value}\n          onChange={locationChangeHandler}\n        />\n        <button type=\"submit\">Submit</button>\n      </form>\n      {submitted && <Search returnedData={returnedData} />}\n    </div>\n  );\n};\nexport default SevenDayForecast;\n","/var/www/lambda/React/8thReact/buildWk8thReact/weather-app/src/components/Search/Search.jsx",["34","35"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport SevenDayForecast from \"../SevenDayForecast\";\n\n// search api by city name\nconst Search = (props) => {\n  const [cityData, setCityData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // MAKE AXIOS CALL DYNAMIC\n  // WORK ON GRABBING LONGITUDE AND LATITUDE OF USER INPUT CITY NAME\n\n  console.log(props);\n\n  let lat = props.returnedData.lat;\n  let lon = props.returnedData.lon;\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const weatherData = await axios(\n          `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&exclude=hourly,minutely&units=imperial&appid=7ec29f6bc7d7288b19154e672f2f3d75`\n        );\n        console.log(weatherData);\n        setCityData(weatherData.data);\n        setLoading(false);\n      } catch (error) {\n        setError(true);\n        setLoading(false);\n        console.log(error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (error) {\n    return <div>The Zip Code entered is not pulling data :(</div>;\n  }\n  // console.log(cityData);\n\n  function unixTimeConverter(unixTime) {\n    const options = {\n      weekday: \"long\",\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n    };\n    let unixMilliseconds = unixTime * 1000;\n    let dataObject = new Date(unixMilliseconds);\n\n    let humanDateFormat = dataObject.toLocaleDateString(\"en-US\", options);\n\n    return humanDateFormat;\n  }\n\n  return (\n    <div className=\"forecast-container\">\n      {cityData.daily.map((item) => {\n        return (\n          <div className=\"forecast-data\" key={item.dt}>\n            {unixTimeConverter(cityData.current.dt) ===\n            unixTimeConverter(item.dt) ? (\n              <h2>Today</h2>\n            ) : (\n              <h2>{unixTimeConverter(item.dt)}</h2>\n            )}\n\n            <p>Minimum Temperature: {item.temp.min}</p>\n            <p>\n              {unixTimeConverter(cityData.current.dt) ===\n              unixTimeConverter(item.dt)\n                ? `Current Temperature: ${cityData.current.temp}`\n                : null}\n            </p>\n\n            <p>Maximum Temperature: {item.temp.max}</p>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Search;\n",{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":2,"column":8,"nodeType":"42","messageId":"43","endLine":2,"endColumn":11},{"ruleId":"40","severity":1,"message":"44","line":2,"column":8,"nodeType":"42","messageId":"43","endLine":2,"endColumn":12},{"ruleId":"40","severity":1,"message":"45","line":3,"column":8,"nodeType":"42","messageId":"43","endLine":3,"endColumn":24},{"ruleId":"46","severity":1,"message":"47","line":35,"column":6,"nodeType":"48","endLine":35,"endColumn":8,"suggestions":"49"},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","'Main' is defined but never used.","'SevenDayForecast' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'lat' and 'lon'. Either include them or remove the dependency array.","ArrayExpression",["52"],"no-global-assign","no-unsafe-negation",{"desc":"53","fix":"54"},"Update the dependencies array to be: [lat, lon]",{"range":"55","text":"56"},[1043,1045],"[lat, lon]"]